name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build project
        run: mvn clean package

      - name: Fetching current version
        id: version
        run: |
          CURRENT_VERSION=`curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{github.repository}}/actions/secrets/NEW_VERSION`
          echo "::set-output name=current_version::${CURRENT_VERSION}"
      - name: Increment version
        run: |
            CURRENT_VERSION=${{steps.version.outputs.current_version}}
            export NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')
            echo "::set-env name=NEW_VERSION::$NEW_VERSION"
      - name: Update version
        run: |
          curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"name\":\"NEW_VERSION\",\"value\":\"$NEW_VERSION\"}" https://api.github.com/repos/${{github.repository}}/actions/secrets/NEW_VERSION
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION}}
          draft: false
          prerelease: false
